# Copyright (C) 2008 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# Configuration for "allstubs" target.  This is structured like the
# assembly interpreters, but consists entirely of C stubs, making it
# a handy if inefficient way to exercise all of the C handlers.
#

handler-size 128

# source for the instruction table stub
asm-stub mips/stub.S

# C file header and basic definitions
import c/header.c
import mips/header.S

# C pre-processor defines for stub C instructions
import cstubs/stubdefs.c

# common defs for the C opcodes
import c/opcommon.c

# arch-specific entry point to interpreter
import mips/entry.S

# opcode list; argument to op-start is default directory
#op-start mips
#    #op OP_FILL_ARRAY_DATA c
#op-end
op-start c
    op OP_NOP mips
    op OP_MOVE mips
    op OP_MOVE_FROM16 mips
    op OP_MOVE_16 mips
    op OP_MOVE_WIDE mips
    op OP_MOVE_WIDE_FROM16 mips
    op OP_MOVE_WIDE_16 mips
    op OP_MOVE_OBJECT mips
    op OP_MOVE_OBJECT_FROM16 mips
    op OP_MOVE_OBJECT_16 mips
    op OP_MOVE_RESULT mips
    op OP_MOVE_RESULT_WIDE mips
    op OP_MOVE_RESULT_OBJECT mips
    op OP_MOVE_EXCEPTION mips
    op OP_RETURN_VOID mips
    op OP_RETURN mips
    op OP_RETURN_WIDE mips
    op OP_RETURN_OBJECT mips
    op OP_CONST_4 mips
    op OP_CONST_16 mips
    op OP_CONST mips
    op OP_CONST_HIGH16 mips
    op OP_CONST_WIDE_16 mips
    op OP_CONST_WIDE_32 mips
    op OP_CONST_WIDE mips
    op OP_CONST_WIDE_HIGH16 mips
    op OP_CONST_STRING mips
    op OP_CONST_STRING_JUMBO mips
    op OP_CONST_CLASS mips
##    op OP_MONITOR_ENTER mips
##    op OP_MONITOR_EXIT mips
    op OP_CHECK_CAST mips
#    op OP_INSTANCE_OF mips
    op OP_ARRAY_LENGTH mips
#    op OP_NEW_INSTANCE mips
#    op OP_NEW_ARRAY mips
#    op OP_FILLED_NEW_ARRAY mips
#    op OP_FILLED_NEW_ARRAY_RANGE mips
    op OP_FILL_ARRAY_DATA mips
    op OP_THROW mips
    op OP_GOTO mips
    op OP_GOTO_16 mips
    op OP_GOTO_32 mips
#    op OP_PACKED_SWITCH mips
#    op OP_SPARSE_SWITCH mips
#    op OP_CMPL_FLOAT mips
#    op OP_CMPG_FLOAT mips
#    op OP_CMPL_DOUBLE mips
#    op OP_CMPG_DOUBLE mips
#    op OP_CMPG_DOUBLE mips
    op OP_CMP_LONG mips
    op OP_IF_EQ mips
    op OP_IF_NE mips
    op OP_IF_LT mips
    op OP_IF_GE mips
    op OP_IF_GT mips
    op OP_IF_LE mips
    op OP_IF_EQZ mips
    op OP_IF_NEZ mips
    op OP_IF_LTZ mips
    op OP_IF_GEZ mips
    op OP_IF_GTZ mips
    op OP_IF_LEZ mips
    op OP_UNUSED_3E mips
    op OP_UNUSED_3F mips
    op OP_UNUSED_40 mips
    op OP_UNUSED_41 mips
    op OP_UNUSED_42 mips
    op OP_UNUSED_43 mips
    op OP_AGET mips
    op OP_AGET_WIDE mips
    op OP_AGET_OBJECT mips
    op OP_AGET_BOOLEAN mips
    op OP_AGET_BYTE mips
    op OP_AGET_CHAR mips
    op OP_AGET_SHORT mips
    op OP_APUT mips
    op OP_APUT_WIDE mips
    op OP_APUT_OBJECT mips
    op OP_APUT_BOOLEAN mips
    op OP_APUT_BYTE mips
    op OP_APUT_CHAR mips
    op OP_APUT_SHORT mips
    op OP_IGET mips
    op OP_IGET_WIDE mips
    op OP_IGET_OBJECT mips
    op OP_IGET_BOOLEAN mips
    op OP_IGET_BYTE mips
    op OP_IGET_CHAR mips
    op OP_IGET_SHORT mips
    op OP_IPUT mips
    op OP_IPUT_WIDE mips
    op OP_IPUT_OBJECT mips
    op OP_IPUT_BOOLEAN mips
    op OP_IPUT_BYTE mips
    op OP_IPUT_CHAR mips
    op OP_IPUT_SHORT mips
    op OP_SGET mips
    op OP_SGET_WIDE mips
    op OP_SGET_OBJECT mips
    op OP_SGET_BOOLEAN mips
    op OP_SGET_BYTE mips
    op OP_SGET_CHAR mips
    op OP_SGET_SHORT mips
    op OP_SPUT mips
    op OP_SPUT_WIDE mips
    op OP_SPUT_OBJECT mips
    op OP_SPUT_BOOLEAN mips
    op OP_SPUT_BYTE mips
    op OP_SPUT_CHAR mips
    op OP_SPUT_SHORT mips
    op OP_INVOKE_VIRTUAL mips
#    op OP_INVOKE_SUPER mips
#    op OP_INVOKE_DIRECT mips
#    op OP_INVOKE_DIRECT mips
#    op OP_INVOKE_STATIC mips
#    op OP_INVOKE_INTERFACE mips
    op OP_UNUSED_73 mips
    op OP_INVOKE_VIRTUAL_RANGE mips
#    op OP_INVOKE_SUPER_RANGE mips
#    op OP_INVOKE_DIRECT_RANGE mips
#    op OP_INVOKE_STATIC_RANGE mips
#    op OP_INVOKE_INTERFACE_RANGE mips
    op OP_UNUSED_79 mips
    op OP_UNUSED_7A mips
    op OP_NEG_INT mips
    op OP_NOT_INT mips
    op OP_NEG_LONG mips
    op OP_NOT_LONG mips
    op OP_NEG_FLOAT mips
    op OP_NEG_DOUBLE mips
    op OP_INT_TO_LONG mips
#    op OP_INT_TO_FLOAT mips
#    op OP_INT_TO_DOUBLE mips
    op OP_LONG_TO_INT mips
#    op OP_LONG_TO_FLOAT mips
#    op OP_LONG_TO_DOUBLE mips
#    op OP_FLOAT_TO_INT mips
#    op OP_FLOAT_TO_LONG mips
#    op OP_FLOAT_TO_DOUBLE mips
#    op OP_DOUBLE_TO_INT mips
#    op OP_DOUBLE_TO_LONG mips
    op OP_INT_TO_BYTE mips
    op OP_INT_TO_CHAR mips
    op OP_INT_TO_SHORT mips
    op OP_ADD_INT mips
    op OP_SUB_INT mips
    op OP_MUL_INT mips
    op OP_DIV_INT mips
    op OP_REM_INT mips
    op OP_AND_INT mips
    op OP_OR_INT mips
    op OP_XOR_INT mips
    op OP_SHL_INT mips
    op OP_SHR_INT mips
    op OP_USHR_INT mips
#    op OP_ADD_LONG mips
#    op OP_SUB_LONG mips
    op OP_ADD_INT_2ADDR mips
    op OP_SUB_INT_2ADDR mips
    op OP_MUL_INT_2ADDR mips
    op OP_DIV_INT_2ADDR mips
    op OP_REM_INT_2ADDR mips
    op OP_AND_INT_2ADDR mips
    op OP_OR_INT_2ADDR mips
    op OP_XOR_INT_2ADDR mips
    op OP_SHL_INT_2ADDR mips
    op OP_SHR_INT_2ADDR mips
    op OP_USHR_INT_2ADDR mips
    op OP_ADD_INT_LIT16 mips
    op OP_RSUB_INT mips
    op OP_MUL_INT_LIT16 mips
    op OP_DIV_INT_LIT16 mips
    op OP_REM_INT_LIT16 mips
    op OP_AND_INT_LIT16 mips
    op OP_OR_INT_LIT16 mips
    op OP_XOR_INT_LIT16 mips
    op OP_ADD_INT_LIT8 mips
    op OP_RSUB_INT_LIT8 mips
    op OP_MUL_INT_LIT8 mips
    op OP_DIV_INT_LIT8 mips
    op OP_REM_INT_LIT8 mips
    op OP_AND_INT_LIT8 mips
    op OP_OR_INT_LIT8 mips
    op OP_XOR_INT_LIT8 mips
    op OP_SHL_INT_LIT8 mips
    op OP_SHR_INT_LIT8 mips
    op OP_USHR_INT_LIT8 mips
    # use nothing but C stubs
op-end

# "helper" code
import c/gotoTargets.c

# finish
import cstubs/enddefs.c

# common subroutines for asm
import mips/footer.S
##import mips/debug.c

